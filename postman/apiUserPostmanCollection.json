{
	"info": {
		"_postman_id": "b079ee65-4923-43a0-a23f-bb1911550315",
		"name": "API User",
		"description": "API for test.",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "15503513"
	},
	"item": [
		{
			"name": "user",
			"item": [
				{
					"name": "Create User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.headers.has('Userid')) {",
									"    const userId = pm.response.headers.get('Userid')",
									"",
									"    pm.environment.set('userId', userId)",
									"}",
									"",
									"// Função para gerar um dígito verificador do CPF",
									"function generateCPF() {",
									"    let cpf = '';",
									"    for (let i = 0; i < 9; i++) {",
									"        cpf += Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    let sum = 0;",
									"    let weight = 10;",
									"    for (let i = 0; i < 9; i++) {",
									"        sum += parseInt(cpf[i]) * weight;",
									"        weight--;",
									"    }",
									"    ",
									"    let remainder = 11 - (sum % 11);",
									"    let firstDigit = (remainder === 10 || remainder === 11) ? 0 : remainder;",
									"    cpf += firstDigit;",
									"    ",
									"    sum = 0;",
									"    weight = 11;",
									"    for (let i = 0; i < 10; i++) {",
									"        sum += parseInt(cpf[i]) * weight;",
									"        weight--;",
									"    }",
									"    ",
									"    remainder = 11 - (sum % 11);",
									"    let secondDigit = (remainder === 10 || remainder === 11) ? 0 : remainder;",
									"    cpf += secondDigit;",
									"    ",
									"    return cpf;",
									"}",
									"",
									"// Chamada da função para gerar o CPF",
									"let randomCPF = generateCPF();",
									"pm.variables.set(\"randomCPF\", randomCPF);",
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"// Função para gerar um dígito verificador do CPF",
									"function generateCPF() {",
									"    let cpf = '';",
									"    for (let i = 0; i < 9; i++) {",
									"        cpf += Math.floor(Math.random() * 10);",
									"    }",
									"    ",
									"    let sum = 0;",
									"    let weight = 10;",
									"    for (let i = 0; i < 9; i++) {",
									"        sum += parseInt(cpf[i]) * weight;",
									"        weight--;",
									"    }",
									"    ",
									"    let remainder = 11 - (sum % 11);",
									"    let firstDigit = (remainder === 10 || remainder === 11) ? 0 : remainder;",
									"    cpf += firstDigit;",
									"    ",
									"    sum = 0;",
									"    weight = 11;",
									"    for (let i = 0; i < 10; i++) {",
									"        sum += parseInt(cpf[i]) * weight;",
									"        weight--;",
									"    }",
									"    ",
									"    remainder = 11 - (sum % 11);",
									"    let secondDigit = (remainder === 10 || remainder === 11) ? 0 : remainder;",
									"    cpf += secondDigit;",
									"    ",
									"    return cpf;",
									"}",
									"",
									"// Chamada da função para gerar o CPF",
									"let randomCPF = generateCPF();",
									"pm.variables.set(\"randomCPF\", randomCPF);",
									"",
									"",
									"// Função para gerar um nome aleatório",
									"function generateRandomName() {",
									"    const names = [\"Alice\", \"Bob\", \"Charlie\", \"David\", \"Eva\", \"Frank\", \"Grace\", \"Henry\"];",
									"    return names[Math.floor(Math.random() * names.length)];",
									"}",
									"",
									"// Função para gerar um sobrenome aleatório",
									"function generateRandomLastName() {",
									"    const lastNames = [\"Smith\", \"Johnson\", \"Williams\", \"Brown\", \"Jones\", \"Davis\", \"Miller\"];",
									"    return lastNames[Math.floor(Math.random() * lastNames.length)];",
									"}",
									"",
									"// Função para gerar um e-mail aleatório",
									"function generateRandomEmail() {",
									"    return generateRandomName().toLowerCase() + \".\" + generateRandomLastName().toLowerCase() + \"@example.com\";",
									"}",
									"",
									"// Função para gerar um número de telefone aleatório",
									"function generateRandomPhone() {",
									"    return \"9\" + Math.floor(Math.random() * 900000000 + 100000000);",
									"}",
									"",
									"// Função para gerar uma senha aleatória",
									"function generateRandomPassword() {",
									"    const chars = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890\";",
									"    let password = \"\";",
									"    for (let i = 0; i < 8; i++) {",
									"        const randomIndex = Math.floor(Math.random() * chars.length);",
									"        password += chars.charAt(randomIndex);",
									"    }",
									"    return password;",
									"}",
									"",
									"// Gerar valores aleatórios",
									"pm.variables.set(\"randomName\", generateRandomName());",
									"pm.variables.set(\"randomLastName\", generateRandomLastName());",
									"pm.variables.set(\"randomEmail\", generateRandomEmail());",
									"pm.variables.set(\"randomPhone\", generateRandomPhone());",
									"pm.variables.set(\"randomPassword\", generateRandomPassword());",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Accept",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"{{randomName}}\",\n  \"lastname\": \"{{randomLastName}}\",\n  \"cpf\": \"{{randomCPF}}\",\n  \"email\": \"{{randomEmail}}\",\n  \"phone\": \"{{randomPhone}}\",\n  \"password\": \"{{randomPassword}}\"\n}\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/users",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": [
						{
							"name": "Created.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -80937788.84206544,\n  \"username\": \"consectetur enim incididunt\",\n  \"email\": \"OU9AqJr@baxSlFZVjwPX.udaw\",\n  \"password\": \"qui elit\",\n  \"userStatus\": 86576092.84950909,\n  \"firstName\": \"culpa Ut\",\n  \"lastName\": \"consequat dolor eiusmod sunt\",\n  \"phone\": \"laborum aliqua\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Created",
							"code": 201,
							"_postman_previewlanguage": "text",
							"header": [
								{
									"key": "userId",
									"value": "cupidatat sint non in in",
									"description": "Generated user."
								},
								{
									"key": "Content-Type",
									"value": "text/plain"
								}
							],
							"cookie": [],
							"body": ""
						},
						{
							"name": "Bad Request.",
							"originalRequest": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"id\": -80937788.84206544,\n  \"username\": \"consectetur enim incididunt\",\n  \"email\": \"OU9AqJr@baxSlFZVjwPX.udaw\",\n  \"password\": \"qui elit\",\n  \"userStatus\": 86576092.84950909,\n  \"firstName\": \"culpa Ut\",\n  \"lastName\": \"consequat dolor eiusmod sunt\",\n  \"phone\": \"laborum aliqua\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/user",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user"
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						}
					]
				},
				{
					"name": "GET All User",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{localHost}}/users",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"users"
							],
							"query": [
								{
									"key": "name",
									"value": "souza",
									"disabled": true
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": -22099130.204079792,\n  \"username\": \"culpa anim\",\n  \"firstName\": \"id\",\n  \"lastName\": \"cillum dolor laboris\",\n  \"email\": \"9kTEnthmNWy16oG@oYMxtJFZ.gnh\",\n  \"phone\": \"cupidatat nulla officia\",\n  \"userStatus\": 15601412.75489162\n}"
						},
						{
							"name": "Bad Request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						},
						{
							"name": "Not Found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						}
					]
				},
				{
					"name": "Get User By Id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{localHost}}/users/:id",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": -22099130.204079792,\n  \"username\": \"culpa anim\",\n  \"firstName\": \"id\",\n  \"lastName\": \"cillum dolor laboris\",\n  \"email\": \"9kTEnthmNWy16oG@oYMxtJFZ.gnh\",\n  \"phone\": \"cupidatat nulla officia\",\n  \"userStatus\": 15601412.75489162\n}"
						},
						{
							"name": "Bad Request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						},
						{
							"name": "Not Found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						}
					]
				},
				{
					"name": "Delete User",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{localHost}}/users/:id",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": [
						{
							"name": "Ok.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "OK",
							"code": 200,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "{\n  \"id\": -22099130.204079792,\n  \"username\": \"culpa anim\",\n  \"firstName\": \"id\",\n  \"lastName\": \"cillum dolor laboris\",\n  \"email\": \"9kTEnthmNWy16oG@oYMxtJFZ.gnh\",\n  \"phone\": \"cupidatat nulla officia\",\n  \"userStatus\": 15601412.75489162\n}"
						},
						{
							"name": "Bad Request.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Bad Request",
							"code": 400,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						},
						{
							"name": "Not Found.",
							"originalRequest": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/user/:username",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"user",
										":username"
									],
									"variable": [
										{
											"key": "username",
											"value": "cupidatat sint non in in",
											"description": "(Required) "
										}
									]
								}
							},
							"status": "Not Found",
							"code": 404,
							"_postman_previewlanguage": "json",
							"header": [
								{
									"key": "Content-Type",
									"value": "application/json"
								}
							],
							"cookie": [],
							"body": "[\n  {\n    \"code\": \"deserunt \",\n    \"description\": \"ad consequat fugiat\"\n  },\n  {\n    \"code\": \"labore quis laboris ad\",\n    \"description\": \"id dolore exercitation sit\"\n  }\n]"
						}
					]
				}
			]
		},
		{
			"name": "Login",
			"item": [
				{
					"name": "{{localHost}}/login",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"// Verifica se a resposta tem o header \"Authorization\"",
									"if (pm.response.headers.has('Authorization')) {",
									"    // Obtém o valor do header \"Authorization\" da resposta",
									"    const authorizationHeader = pm.response.headers.get('Authorization');",
									"",
									"    // Define a variável de ambiente \"token\" com o valor do header",
									"    pm.environment.set('token', authorizationHeader);",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"maria@example.com\",\n    \"password\": \"djow1234\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{localHost}}/login",
							"host": [
								"{{localHost}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "https://exemplo.com.br",
			"type": "string"
		},
		{
			"key": "token",
			"value": "Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJlbWFpbCI6ImVtYWlsQGV4YW1wbGUuY29tIiwiZXhwIjoxNjI5NjM2MDAwfQ.MjYwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDA"
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}